<Window x:Class="AthameWPF.UI.Windows.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AthameWPF.UI.Windows"
        xmlns:controls="clr-namespace:AthameWPF.UI.Controls"
        xmlns:viewModel="clr-namespace:AthameWPF.UI.ViewModels"
        xmlns:plugin="clr-namespace:AthameWPF.Plugin"
        mc:Ignorable="d"
        Title="SettingsWindow" Height="478" Width="737" Style="{StaticResource WindowBase}" Name="Window">
    <Window.DataContext>
        <viewModel:SettingsViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="SettingsTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" 
                                      Background="{StaticResource SecNavBackgroundBrush}">
                                <TabPanel.Effect>
                                    <DropShadowEffect Direction="360" Opacity="0.5" ShadowDepth="2"/>
                                </TabPanel.Effect>
                            </TabPanel>
                            <Border x:Name="ContentPanel" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="0.45*"/>
                                <Setter TargetName="ColumnDefinition0" Property="MaxWidth" Value="450" />
                                <Setter TargetName="ColumnDefinition0" Property="MinWidth" Value="150" />
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#EAF6FD" Offset="0.15"/>
            <GradientStop Color="#D9F0FC" Offset=".5"/>
            <GradientStop Color="#BEE6FD" Offset=".5"/>
            <GradientStop Color="#A7D9F5" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd" Background="Transparent" Padding="10,10,0,10">
                                <ContentPresenter x:Name="Content" ContentSource="Header" TextBlock.TextAlignment="Left"
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource SecNavHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource SecNavActiveBrush}"/>
                                <Setter Property="TextBlock.Foreground" TargetName="Content" Value="White" />
                                <Setter Property="TextBlock.FontWeight" TargetName="Content" Value="Bold" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl Style="{DynamicResource SettingsTabControlStyle}" TabStripPlacement="Left">
            <TabItem Header="Downloads">
                
            </TabItem>
            <TabItem Header="Accounts &amp; services">
                <StackPanel Style="{StaticResource InnerContent}">
                    <StackPanel Margin="0,0,0,10">
                        <TextBlock Style="{StaticResource HeadingText}">Accounts and services</TextBlock>
                        <TextBlock Style="{StaticResource SubHeadingText}">Sign into a service or configure services below:</TextBlock>
                    </StackPanel>
                    <ListView ItemsSource="{Binding PluginInstances, Mode=OneWay}">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="plugin:PluginInstance">
                                <DockPanel>
                                    <DockPanel.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.ShowSettings, ElementName=Window}" CommandParameter="{Binding}" />
                                    </DockPanel.InputBindings>
                                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                            <StackPanel Orientation="Vertical" Margin="5" HorizontalAlignment="Left">
                                                <TextBlock Margin="0,0,0,3" FontSize="14" FontWeight="Bold">
                                                    <Run Text="{Binding Info.Name}" />
                                                </TextBlock>
                                                <TextBlock FontSize="12"><Run FontStyle="Italic" Text="{Binding Info.Description}" /></TextBlock>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Setter Property="DockPanel.Dock" Value="Right" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding AuthenticatableService.IsAuthenticated}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                            <Setter Property="DockPanel.Dock" Value="Right" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <Button>Sign in</Button>
                                        </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Setter Property="DockPanel.Dock" Value="Right" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AuthenticatableService.IsAuthenticated}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />

                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <TextBlock>Signed in as <Run Text="{Binding AuthenticatableAccountName, Mode=OneWay}" /></TextBlock>
                                        <Button>Sign out</Button>
                                    </StackPanel>
                                </DockPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
